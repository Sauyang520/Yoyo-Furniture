package com.yoyofurniture.gui.salesperson;

import com.yoyofurniture.bean.*;
import com.yoyofurniture.utility.HandleAccount;
import com.yoyofurniture.utility.HandleSales;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;


public class SpCart extends javax.swing.JPanel {
    private final Salesperson salesperson;
    private final List<SelectedProduct> cart = HandleSales.getHandleSalesInstance().getCart();
    private DefaultTableModel jTableModel;


    public SpCart(Salesperson salesperson) {
        this.salesperson = salesperson;
        initComponents();
        selfInitComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCart = new javax.swing.JTable();
        jButtonDelete = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jButtonPlaceOrder = new javax.swing.JButton();
        jLabelTotal = new javax.swing.JLabel();
        SpinnerNumberModel spinnerModel = new SpinnerNumberModel(1, 1, Integer.MAX_VALUE, 1);
        jSpinnerQuantity = new javax.swing.JSpinner(spinnerModel);
        jLabel2 = new javax.swing.JLabel();
        jComboBoxCustomer = new javax.swing.JComboBox<>();
        jButtonNewCust = new javax.swing.JButton();

        jTableCart.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{

                }
        ));
        jTableCart.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableCart.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableCart);

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButtonPlaceOrder.setText("Place Order");
        jButtonPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlaceOrderActionPerformed(evt);
            }
        });

        jLabelTotal.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTotal.setText("Total");

        jSpinnerQuantity.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jSpinnerQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerQuantityStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Total (RM):");

        jComboBoxCustomer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{}));

        jButtonNewCust.setText("New Customer");
        jButtonNewCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewCustActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(58, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jSpinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jButtonBack)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jButtonDelete)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jButtonNewCust, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jComboBoxCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(44, 44, 44)
                                                                .addComponent(jButtonPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jButtonBack)
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jSpinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabelTotal)
                                                .addComponent(jLabel2)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonDelete)
                                        .addComponent(jComboBoxCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonNewCust, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        enterFunction(new SpAddSalesOrder(salesperson));
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int selectedRow = jTableCart.getSelectedRow();
        if (selectedRow != -1) {
            String itemID = jTableCart.getValueAt(selectedRow, 0).toString();

            salesperson.removeItem(cart, itemID);

            jTableModel.removeRow(selectedRow);
            double total = HandleSales.getHandleSalesInstance().calculateTotal();
            jLabelTotal.setText(total + "");
        }

        if (cart.size() == 0) {
            jButtonPlaceOrder.setEnabled(false);
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlaceOrderActionPerformed
        String selectedCustID = String.valueOf(jComboBoxCustomer.getSelectedItem()).split(":")[0];

        try {
            salesperson.placeOrder(selectedCustID);
        } catch (Exception e) {
            e.printStackTrace();
        }

        JOptionPane.showMessageDialog(this, "Successfully place an order!", "Success", JOptionPane.INFORMATION_MESSAGE);

        enterFunction(new SpAddSalesOrder(salesperson));
    }//GEN-LAST:event_jButtonPlaceOrderActionPerformed

    private void refreshScreenWhenCloseFrame(JFrame jFrame) {
        jFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                SpAddNewCustomer.deleteSpAddNewCustomer();
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(jLabelTotal);
                if (frame != null) {
                    frame.getContentPane().removeAll();
                    frame.setContentPane(new SpCart(salesperson));
                    frame.getContentPane().revalidate();
                    frame.getContentPane().repaint();
                }
            }
        });
    }

    private void jSpinnerQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerQuantityStateChanged
        int selectedRow = jTableCart.getSelectedRow();
        int quantity = (int) jSpinnerQuantity.getValue();
        if (selectedRow != -1) {
            SelectedProduct selectedProduct = cart.get(selectedRow);
            salesperson.changeItemQuantity(selectedProduct, quantity);

            jTableCart.setValueAt(quantity, selectedRow, 3);
            jTableCart.setValueAt(selectedProduct.getAmount(), selectedRow, 4);

            double total = HandleSales.getHandleSalesInstance().calculateTotal();
            jLabelTotal.setText(total + "");
        }
    }//GEN-LAST:event_jSpinnerQuantityStateChanged

    private void jButtonNewCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewCustActionPerformed
        SpAddNewCustomer spAddNewCustomer = SpAddNewCustomer.initiateSpAddNewCustomer(salesperson);
        spAddNewCustomer.setVisible(true);

        refreshScreenWhenCloseFrame(spAddNewCustomer);
    }//GEN-LAST:event_jButtonNewCustActionPerformed


    /**
     * Switch scene (panel)
     * @param jPanel panel to be switched
     */
    private void enterFunction(JPanel jPanel) {
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        if (frame != null) {
            frame.getContentPane().removeAll();
            frame.setContentPane(jPanel);
            frame.getContentPane().revalidate();
            frame.getContentPane().repaint();
        }
    }

    /**
     * insert row to table
     * @param itemID item id
     * @param itemName item name
     * @param itemPrice item price
     * @param itemQuantity item quantity
     * @param itemAmount item amount
     */
    private void insertData(String itemID, String itemName, double itemPrice, int itemQuantity, double itemAmount) {
        // Add a row with the provided data to the DefaultTableModel
        jTableModel.addRow(new Object[]{itemID, itemName, itemPrice, itemQuantity, itemAmount});
    }

    private void selfInitComponents() {
        try {
            List<Customer> customers = HandleAccount.readAllData("customer.txt",
                            userinfo -> new Customer(userinfo[0], userinfo[1], userinfo[2], userinfo[3]), "\\|")
                    .stream().map(user -> (Customer) user).toList();

            for (Customer customer : customers) {
                jComboBoxCustomer.addItem(customer.getUserID() + ":" + customer.getName());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        jTableModel = new DefaultTableModel(new Object[]{"ID", "Name", "Price", "Quantity", "Amount"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        ListSelectionModel selectionModel = jTableCart.getSelectionModel();
        jTableCart.setModel(jTableModel);

        cart.forEach(selectedProduct -> {
            Product product = selectedProduct.getProduct();
            insertData(product.getItemID(), product.getItemName(), product.getItemPrice(), selectedProduct.getQuantity(), selectedProduct.getAmount());
        });

        selectionModel.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = jTableCart.getSelectedRow();
                if (selectedRow != -1) {
                    jSpinnerQuantity.setValue(cart.get(selectedRow).getQuantity());
                }
            }
        });

        double total = HandleSales.getHandleSalesInstance().calculateTotal();
        jLabelTotal.setText(total + "");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNewCust;
    private javax.swing.JButton jButtonPlaceOrder;
    private javax.swing.JComboBox<String> jComboBoxCustomer;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerQuantity;
    private javax.swing.JTable jTableCart;
    // End of variables declaration//GEN-END:variables
}
