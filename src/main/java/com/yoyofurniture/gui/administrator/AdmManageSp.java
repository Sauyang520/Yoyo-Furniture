package com.yoyofurniture.gui.administrator;

import com.yoyofurniture.bean.Administrator;
import com.yoyofurniture.bean.Gender;
import com.yoyofurniture.bean.Salesperson;
import com.yoyofurniture.gui.salesperson.SpManagePersonal;
import com.yoyofurniture.utility.HandleAccount;
import com.yoyofurniture.utility.SetRole;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;


public class AdmManageSp extends javax.swing.JPanel {
    private final Administrator administrator;
    private final List<Salesperson> salespersonList = new ArrayList<>();
    private final SetRole salespersonInstance = userinfo
            -> new Salesperson(userinfo[0], userinfo[1], userinfo[2], userinfo[3], userinfo[4], userinfo[5], userinfo[6]);
    private DefaultTableModel jTableModel;


    public AdmManageSp(Administrator administrator) {
        this.administrator = administrator;
        initComponents();
        selfInitComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonId = new javax.swing.JRadioButton();
        jRadioButtonName = new javax.swing.JRadioButton();
        jRadioButtonPhone = new javax.swing.JRadioButton();
        jRadioButtonEmail = new javax.swing.JRadioButton();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jTextFieldSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSp = new javax.swing.JTable();
        jButtonAdd = new javax.swing.JButton();
        jButtonModify = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelWarning = new javax.swing.JLabel();
        jButtonMenu = new javax.swing.JButton();
        jRadioButtonBirthDate = new javax.swing.JRadioButton();

        jLabel1.setText("Search By:");

        jRadioButtonId.setText("ID");

        jRadioButtonName.setText("Name");

        jRadioButtonPhone.setText("Phone");

        jRadioButtonEmail.setText("Email");

        jComboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGenderActionPerformed(evt);
            }
        });

        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        jTableSp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableSp.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableSp.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableSp);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonModify.setText("Modify");
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonMenu.setText("Menu");
        jButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuActionPerformed(evt);
            }
        });

        jRadioButtonBirthDate.setText("Date of Birth");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonId)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButtonName)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButtonPhone))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel1)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonMenu)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonEmail)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButtonBirthDate)
                                        .addGap(130, 130, 130)
                                        .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelWarning)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAdd)
                                .addGap(33, 33, 33)
                                .addComponent(jButtonModify)))
                        .addGap(39, 39, 39)
                        .addComponent(jButtonDelete)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonMenu))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonId)
                    .addComponent(jRadioButtonName)
                    .addComponent(jRadioButtonPhone)
                    .addComponent(jRadioButtonEmail)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonBirthDate))
                .addGap(18, 18, 18)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelWarning)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonModify)
                    .addComponent(jButtonDelete))
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGenderActionPerformed
        jTextFieldSearchKeyReleased(null);
    }//GEN-LAST:event_jComboBoxGenderActionPerformed

    private void jTextFieldSearchKeyReleased(KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        List<Salesperson> salespeople = new ArrayList<>();
        jTableModel.setRowCount(0);
        String text = jTextFieldSearch.getText();

        if (text.equals("")) {
            salespeople.addAll(salespersonList);
        } else {
            if (jRadioButtonId.isSelected()) {
                salespeople.addAll(salespersonList.stream()
                        .filter(s -> s.getUserID().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButtonName.isSelected()) {
                salespeople.addAll(salespersonList.stream()
                        .filter(s -> s.getName().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButtonPhone.isSelected()) {
                salespeople.addAll(salespersonList.stream()
                        .filter(s -> s.getPhoneNumber().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButtonEmail.isSelected()) {
                salespeople.addAll(salespersonList.stream()
                        .filter(s -> s.getEmail().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButtonBirthDate.isSelected()) {
                salespeople.addAll(salespersonList.stream()
                        .filter(s -> s.getDateOfBirth().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else {
                salespeople.addAll(salespersonList);
            }
        }

        if (jComboBoxGender.getSelectedItem() == Gender.MALE) {
            salespeople = salespeople.stream().filter(s -> s.getGender().equals(Gender.MALE.getGender())).toList();
        } else if (jComboBoxGender.getSelectedItem() == Gender.FEMALE) {
            salespeople = salespeople.stream().filter(s -> s.getGender().equals(Gender.FEMALE.getGender())).toList();
        }

        salespeople.forEach(salesperson -> insertData(salesperson.getUserID(), salesperson.getName(),
                salesperson.getGender(), salesperson.getDateOfBirth(), salesperson.getPhoneNumber(), salesperson.getEmail()));

        jTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int selectedRow = jTableSp.getSelectedRow();

        if (selectedRow != -1) {
            String userID = jTableSp.getValueAt(selectedRow, 0).toString();

            try {
                Administrator.deleteSp(userID);
            } catch (Exception e) {
                e.printStackTrace();
            }
            refreshScreenWhenDelete();

            JOptionPane.showMessageDialog(this, "Account deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            jLabelWarning.setText("Please select an officer to delete.");
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        int selectedRow = jTableSp.getSelectedRow();

        if (selectedRow != -1) {
            String userID = jTableSp.getValueAt(selectedRow, 0).toString();

            Salesperson salesperson = salespersonList.stream().filter(s -> s.getUserID().equals(userID)).toList().get(0);

            SpManagePersonal spManagePersonal = SpManagePersonal.initiateSpManagePersonal(salesperson);
            spManagePersonal.setVisible(true);
            refreshScreenWhenCloseFrame(spManagePersonal);
        } else {
            jLabelWarning.setText("Please select an officer to modify.");
        }
    }//GEN-LAST:event_jButtonModifyActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        AdmManageSpAdd admManageSpAdd = AdmManageSpAdd.initiateAdmManageSpAdd();
        admManageSpAdd.setVisible(true);

        refreshScreenWhenCloseFrame(admManageSpAdd);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        if (frame != null) {
            frame.getContentPane().removeAll();
            frame.setContentPane(new AdmMain(administrator));
            frame.getContentPane().revalidate();
            frame.getContentPane().repaint();
        }
    }//GEN-LAST:event_jButtonMenuActionPerformed


    /**
     * refresh current panel when deleting salesperson
     */
    private void refreshScreenWhenDelete() {
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(jTableSp);
        if (frame != null) {
            frame.getContentPane().removeAll();
            frame.setContentPane(new AdmManageSp(administrator));
            frame.getContentPane().revalidate();
            frame.getContentPane().repaint();
        }
    }

    /**
     * refresh current panel when new window is closed
     * @param jFrame window (frame) disposed
     */
    private void refreshScreenWhenCloseFrame(JFrame jFrame){
        jFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(jTableSp);
                if (frame != null) {
                    frame.getContentPane().removeAll();
                    frame.setContentPane(new AdmManageSp(administrator));
                    frame.getContentPane().revalidate();
                    frame.getContentPane().repaint();
                }
            }
        });
    }

    /**
     * insert row to table
     * @param userID user id
     * @param name name
     * @param gender gender
     * @param birthDate date of birth
     * @param phone phone
     * @param email email
     */
    private void insertData(String userID, String name, String gender, String birthDate, String phone, String email) {
        // Add a row with the provided data to the DefaultTableModel
        jTableModel.addRow(new Object[]{userID, name, gender, birthDate, phone, email});
    }
    private void selfInitComponents() {
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(jRadioButtonId);
        buttonGroup.add(jRadioButtonName);
        buttonGroup.add(jRadioButtonPhone);
        buttonGroup.add(jRadioButtonEmail);
        buttonGroup.add(jRadioButtonBirthDate);

        jTableModel = new DefaultTableModel(new Object[]{"ID", "Name", "Gender", "Date of Birth", "Phone Number", "Email"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jTableSp.setModel(jTableModel);

        try {
            salespersonList.addAll(HandleAccount.readAllData("salesperson.txt", salespersonInstance, ",").stream()
                    .map(user -> (Salesperson) user)
                    .toList());
        } catch (Exception e) {
            e.printStackTrace();
        }

        salespersonList.forEach(salesperson -> insertData(salesperson.getUserID(), salesperson.getName(), salesperson.getGender(),
                salesperson.getDateOfBirth(), salesperson.getPhoneNumber(), salesperson.getEmail()));

        for (Gender value : Gender.values()) {
            jComboBoxGender.addItem(value);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonMenu;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JComboBox<Gender> jComboBoxGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelWarning;
    private javax.swing.JRadioButton jRadioButtonBirthDate;
    private javax.swing.JRadioButton jRadioButtonEmail;
    private javax.swing.JRadioButton jRadioButtonId;
    private javax.swing.JRadioButton jRadioButtonName;
    private javax.swing.JRadioButton jRadioButtonPhone;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSp;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
