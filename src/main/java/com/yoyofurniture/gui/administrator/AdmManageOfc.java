package com.yoyofurniture.gui.administrator;

import com.yoyofurniture.bean.Administrator;
import com.yoyofurniture.bean.Officer;
import com.yoyofurniture.gui.officer.OfcManagePersonal;
import com.yoyofurniture.utility.HandleAccount;
import com.yoyofurniture.utility.SetRole;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;


public class AdmManageOfc extends javax.swing.JPanel {
    private final Administrator administrator;
    private final List<Officer> officerList = new ArrayList<>();
    private final SetRole officerInstance = userinfo
            -> new Officer(userinfo[0], userinfo[1], userinfo[2], userinfo[3], userinfo[4]);
    private DefaultTableModel jTableModel;

    public AdmManageOfc(Administrator administrator) {
        this.administrator = administrator;
        initComponents();
        selfInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOfc = new javax.swing.JTable();
        jButtonAdd = new javax.swing.JButton();
        jButtonModify = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jRadioButtonId = new javax.swing.JRadioButton();
        jRadioButtonName = new javax.swing.JRadioButton();
        jRadioButtonPhone = new javax.swing.JRadioButton();
        jRadioButtonEmail = new javax.swing.JRadioButton();
        jButtonMenu = new javax.swing.JButton();
        jLabelWarning = new javax.swing.JLabel();

        jTableOfc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableOfc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableOfc.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableOfc);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonModify.setText("Modify");
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        jRadioButtonId.setText("ID");

        jRadioButtonName.setText("Name");

        jRadioButtonPhone.setText("Phone Number");

        jRadioButtonEmail.setText("Email");

        jButtonMenu.setText("Menu");
        jButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jButtonAdd)
                        .addGap(51, 51, 51)
                        .addComponent(jButtonModify)
                        .addGap(48, 48, 48)
                        .addComponent(jButtonDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonId)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButtonPhone)
                                .addGap(74, 74, 74)
                                .addComponent(jRadioButtonEmail)
                                .addGap(182, 182, 182)))))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButtonMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonId)
                    .addComponent(jRadioButtonName)
                    .addComponent(jRadioButtonPhone)
                    .addComponent(jRadioButtonEmail))
                .addGap(37, 37, 37)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelWarning)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonModify)
                    .addComponent(jButtonDelete))
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        if (frame != null) {
            frame.getContentPane().removeAll();
            frame.setContentPane(new AdmMain(administrator));
            frame.getContentPane().revalidate();
            frame.getContentPane().repaint();
        }
    }//GEN-LAST:event_jButtonMenuActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        List<Officer> officers = new ArrayList<>();
        jTableModel.setRowCount(0);
        String text = jTextFieldSearch.getText();

        if (text.equals("")) {
            officers.addAll(officerList);
        } else {
            if (jRadioButtonId.isSelected()) {
                officers.addAll(officerList.stream()
                        .filter(o -> o.getUserID().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButtonName.isSelected()) {
                officers.addAll(officerList.stream()
                        .filter(o -> o.getName().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButtonPhone.isSelected()) {
                officers.addAll(officerList.stream()
                        .filter(o -> o.getPhoneNumber().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButtonEmail.isSelected()) {
                officers.addAll(officerList.stream()
                        .filter(o -> o.getEmail().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else {
                officers.addAll(officerList);
            }
        }
        officers.forEach(officer -> insertData(officer.getUserID(), officer.getName(), officer.getPhoneNumber(), officer.getEmail()));

        jTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        AdmManageOfcAdd admManageOfcAdd = AdmManageOfcAdd.initiateAdmManageOfcAdd();
        admManageOfcAdd.setVisible(true);

        refreshScreenWhenCloseFrame(admManageOfcAdd);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        int selectedRow = jTableOfc.getSelectedRow();

        if (selectedRow != -1) {
            String userID = jTableOfc.getValueAt(selectedRow, 0).toString();

            Officer officer = officerList.stream().filter(o -> o.getUserID().equals(userID)).toList().get(0);

            OfcManagePersonal ofcManagePersonal = OfcManagePersonal.initiateOfcManagePersonal(officer);
            ofcManagePersonal.setVisible(true);
            refreshScreenWhenCloseFrame(ofcManagePersonal);
        } else {
            jLabelWarning.setText("Please select an officer to modify.");
        }
    }//GEN-LAST:event_jButtonModifyActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int selectedRow = jTableOfc.getSelectedRow();
        if (selectedRow != -1) {
            String userID = jTableOfc.getValueAt(selectedRow, 0).toString();

            try {
                Administrator.deleteOfc(userID);
            } catch (Exception e) {
                e.printStackTrace();
            }
            refreshScreenWhenDelete();

            JOptionPane.showMessageDialog(this, "Account deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        }else {
            jLabelWarning.setText("Please select an officer to delete.");
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed


    /**
     * refresh current panel when deleting officer
     */
    private void refreshScreenWhenDelete(){
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(jTableOfc);
        if (frame != null) {
            frame.getContentPane().removeAll();
            frame.setContentPane(new AdmManageOfc(administrator));
            frame.getContentPane().revalidate();
            frame.getContentPane().repaint();
        }
    }

    /**
     * refresh current panel when new window is closed
     * @param jFrame window (frame) disposed
     */
    private void refreshScreenWhenCloseFrame(JFrame jFrame){
        jFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(jTableOfc);
                if (frame != null) {
                    frame.getContentPane().removeAll();
                    frame.setContentPane(new AdmManageOfc(administrator));
                    frame.getContentPane().revalidate();
                    frame.getContentPane().repaint();
                }
            }
        });
    }

    /**
     * insert row to table
     * @param userID user id
     * @param name name
     * @param phone phone
     * @param email email
     */
    private void insertData(String userID, String name, String phone, String email) {
        jTableModel.addRow(new Object[]{userID, name, phone, email});
    }

    private void selfInitComponents(){
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(jRadioButtonId);
        buttonGroup.add(jRadioButtonName);
        buttonGroup.add(jRadioButtonPhone);
        buttonGroup.add(jRadioButtonEmail);

        jTableModel = new DefaultTableModel(new Object[]{"ID", "Name", "Phone Number", "Email"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jTableOfc.setModel(jTableModel);

        try {
            officerList.addAll(HandleAccount.readAllData("officer.txt", officerInstance, ",").stream()
                    .map(user -> (Officer) user)
                    .toList());
        } catch (Exception e) {
            e.printStackTrace();
        }

        officerList.forEach(officer -> insertData(officer.getUserID(), officer.getName(), officer.getPhoneNumber(), officer.getEmail()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonMenu;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JLabel jLabelWarning;
    private javax.swing.JRadioButton jRadioButtonEmail;
    private javax.swing.JRadioButton jRadioButtonId;
    private javax.swing.JRadioButton jRadioButtonName;
    private javax.swing.JRadioButton jRadioButtonPhone;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableOfc;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
