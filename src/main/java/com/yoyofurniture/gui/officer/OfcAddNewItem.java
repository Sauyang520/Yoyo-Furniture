/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.yoyofurniture.gui.officer;

import com.yoyofurniture.bean.Product;
import com.yoyofurniture.bean.SaleOrder;
import com.yoyofurniture.bean.SelectedProduct;
import com.yoyofurniture.gui.salesperson.SpProductDetails;
import com.yoyofurniture.utility.HandleSales;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author petywh
 */
public class OfcAddNewItem extends javax.swing.JFrame {
    public SaleOrder saleOrder;
    private final List<Product> productList = new ArrayList<>();
    private DefaultTableModel jTableModel;
    private int quantity;
    private Product selectedProduct;
  
    /**
     * Creates new form OfcAddNewItem
     * @param saleOrder
     * @param callback
     */
    public OfcAddNewItem(SaleOrder saleOrder) {
        this.saleOrder = saleOrder;
       
        initComponents();
        selfInintComponents();
        
        
        
    }
    
    public int getQuantity() {
        return quantity;
    }

    // Getter method for the selected product
    public Product getSelectedProduct() {
        return selectedProduct;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProduct = new javax.swing.JTable();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jSpinnerAmount = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableProduct.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableProduct);

        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        jButtonAdd.setText("Add Item/s");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jSpinnerAmount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        jLabel1.setText("Select Quantity");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Product ID");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Category");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Product Name");

        jLabel2.setText("Search By:");

        jButton1.setText("More Info");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAdd)
                        .addGap(14, 14, 14)
                        .addComponent(jButton1)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButton1)
                                        .addGap(29, 29, 29)
                                        .addComponent(jRadioButton2)))
                                .addGap(31, 31, 31)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButton1)
                        .addComponent(jRadioButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jSpinnerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        List<Product> products = new ArrayList<>();
        jTableModel.setRowCount(0);
        String text = jTextFieldSearch.getText();

        if (text.equals("")) {
            products.addAll(productList);
        } else {
            if (jRadioButton1.isSelected()) {
                products.addAll(productList.stream()
                        .filter(p -> p.getItemID().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButton3.isSelected()) {
                products.addAll(productList.stream()
                        .filter(p -> p.getItemName().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            } else if (jRadioButton2.isSelected()) {
                products.addAll(productList.stream()
                        .filter(p -> p.getItemCategory().toUpperCase().contains(text.toUpperCase()))
                        .toList());
            }  else {
                products.addAll(productList);
            }
        }

        products.forEach(product -> insertData(product.getItemID(), product.getItemName(),
                product.getItemCategory(), product.getItemPrice()));

        jTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        int selectedRow = jTableProduct.getSelectedRow();
        if (selectedRow != -1) {
            // Set the selected quantity
            quantity = (int) jSpinnerAmount.getValue();

            // Set the selected product
            String itemID = jTableProduct.getValueAt(selectedRow, 0).toString();
            selectedProduct = productList.stream().filter(p -> p.getItemID().equals(itemID)).findFirst().orElse(null);
            
            // Close the frame
            dispose();
        
            
//            System.out.println(product);
//            HandleSales handleSales = HandleSales.getHandleSalesInstance();
//            handleSales.addItemToCart(product,quantity);
//            System.out.println(handleSales.getCart());
//            List<SelectedProduct> cart = handleSales.getCart();
//            for (SelectedProduct selectedProduct : cart) {
//                System.out.println("Product: " + selectedProduct.getProduct().getItemID());
//                   System.out.println("Quantity: " + selectedProduct.getQuantity());
//}
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = jTableProduct.getSelectedRow();

        if (selectedRow != -1) {
            String itemID = jTableProduct.getValueAt(selectedRow, 0).toString();
            Product product = productList.stream().filter(p -> p.getItemID().equals(itemID)).toList().get(0);
            new SpProductDetails(product).setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerAmount;
    private javax.swing.JTable jTableProduct;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables

    private void selfInintComponents() {
        setTitle("Add Item to SaleOrder Details (ID:"+saleOrder.getSaleID()+")");
        setLocationRelativeTo(null);
        
        jTableModel = new DefaultTableModel(new Object[]{"ID", "Name", "Category", "Price"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        jTableProduct.setModel(jTableModel);
        
        try {
            productList.addAll(HandleSales.readAllProduct());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        productList.forEach(product -> insertData(product.getItemID(), product.getItemName(), product.getItemCategory(),
                product.getItemPrice()));
           

    }
    
    private void insertData(String itemID, String itemName, String itemCategory, double itemPrice) {
        // Add a row with the provided data to the DefaultTableModel
        jTableModel.addRow(new Object[]{itemID, itemName, itemCategory, itemPrice});
    }
}
