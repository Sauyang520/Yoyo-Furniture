package com.yoyofurniture.bean;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.element.Text;
import com.itextpdf.layout.property.TextAlignment;

import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.yoyofurniture.utility.HandleSales;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;

/**
 *
 * @author petywh
 */
public class WorkDoneReport{
    private final List<SaleOrder> saleOrderList = new ArrayList<>();
    /**
     * Generate Work Done Report in PDF form
     * @throws FileNotFoundException exception
     */
    public static void generateWorkDoneReport(String user, String month,String yearString) throws FileNotFoundException {
        int monthInt = Month.valueOf(month.toUpperCase()).getValue();
        int yearInt = Integer.parseInt(yearString);
        List<SaleOrder> selectedOrders = new ArrayList<>();
        List<OrderEntry> orderEntries = new ArrayList<>();
        try {
            List<SaleOrder> salesorders = HandleSales.readAllSalesOrder();
            
            
            for (SaleOrder saleorder : salesorders) {
                LocalDate orderDate = LocalDate.parse(saleorder.getSaleDateTime(),DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"));
                if (orderDate.getMonthValue() == monthInt && orderDate.getYear() == yearInt && saleorder.getStatus().equals("WORK_DONE")){
                    System.out.println(saleorder.getSaleID());
                    System.out.println(saleorder.getProductList());
                    selectedOrders.add(saleorder);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        try{
                for (SaleOrder order:selectedOrders){
               String saleID = order.getSaleID();
               String salesperson = order.getSalesperson();
               String saleDateTime = order.getSaleDateTime();
               System.out.println(saleID);

               for (SelectedProduct selectedProduct : order.getProductList()) {
                   Product product = selectedProduct.getProduct();
                   int quantity = selectedProduct.getQuantity();
                   double amount = selectedProduct.getAmount();
                   String itemID = product.getItemID();
                   String itemName = product.getItemName();
                   

                   // Create a new OrderEntry for each SelectedProduct
                   OrderEntry orderEntry = new OrderEntry(saleID, salesperson, saleDateTime, product, quantity, amount);
                   orderEntries.add(orderEntry); // Add the OrderEntry to the list
                   }
           }
        } catch (Exception e) {
            e.printStackTrace();
        }
        try{
            for (OrderEntry orderEntry : orderEntries){
                System.out.println(orderEntry.getSaleID()+","+orderEntry.getProduct()+orderEntry.getQuantity());
            }
        } catch (Exception e){
            e.printStackTrace();
        }
        
        
        LocalDate ld = LocalDate.now();
        
        String pdfName = "src/main/resources/com.yoyofurniture.workdonereport/" + yearString+ "-"+month+ "-" + "WORK_DONE_REPORT.pdf";
        
        PdfWriter writer = new PdfWriter(pdfName);

        // Create a PdfDocument object
        PdfDocument pdf = new PdfDocument(writer);

        // Create a Document object
        Document document = new Document(pdf);
        Paragraph yoyo = new Paragraph("YOYO Furniture").setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16);
        document.add(yoyo);
        // Add content to the document
        String headerText = "Work Done Report (" + month +" "+ yearString+  ")";
        Text header = new Text(headerText);
        Paragraph headerParagraph = new Paragraph(header).setTextAlignment(TextAlignment.CENTER).setBold().setUnderline().setFontSize(20);
        document.add(headerParagraph);
        
        Paragraph h2 = new Paragraph("Generated by: "+ user+ " (" +ld+")").setFontSize(8);
       
        document.add(h2);
        
        Paragraph h3 = new Paragraph("Summary of Work Completed:").setFontSize(12).setBold();
        document.add(h3);
        
        document.add(new Paragraph("\n"));
        
        Table table = new Table(5); // 6 columns for the data
        table.addHeaderCell("Item ID");
        table.addHeaderCell("Item Name");
        table.addHeaderCell("Sale ID");
        table.addHeaderCell("Sale DateTime");
        
        table.addHeaderCell("Quantity").setTextAlignment(TextAlignment.CENTER);
        
        
        if (orderEntries.isEmpty()) {
            // Add a message if there are no order entries
            for (int i = 0; i < 5; i++) {
                table.addCell("");
            }
            document.add(table);
            document.add(new Paragraph("\n"));
            Paragraph noEntriesParagraph = new Paragraph("No entries were found")
                                                .setFontSize(14)
                                                .setTextAlignment(TextAlignment.CENTER);
            document.add(noEntriesParagraph);
        } else {
            for (OrderEntry entry : orderEntries) {
                table.addCell(entry.getProduct().getItemID());
                table.addCell(entry.getProduct().getItemName());
                table.addCell(entry.getSaleID());
                Paragraph saleDateTimeParagraph = new Paragraph(entry.getSaleDateTime());
                saleDateTimeParagraph.setFontSize(10);                              
                table.addCell(saleDateTimeParagraph);
                table.addCell(String.valueOf(entry.getQuantity()));
            }
            document.add(table);
        }

        
        document.add(new Paragraph("\n"));
        Paragraph h5 = new Paragraph("Private & Confidential").setFontSize(8).setTextAlignment(TextAlignment.CENTER);
       
        document.add(h5);
        document.close();

    }
    
    public static void main(String[] args) {
        try {
            generateWorkDoneReport("user","February","2024");
            System.out.println("PDF created successfully.");
        } catch (FileNotFoundException e) {
            System.err.println("File not found: " + e.getMessage());
        }
    }
    
        


    
    
   
    
    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
    
    

}
